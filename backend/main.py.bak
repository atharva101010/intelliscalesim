from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from contextlib import asynccontextmanager
from routers import simulations, auth
from models.database import init_db

@asynccontextmanager
async def lifespan(app: FastAPI):
    init_db()
    print("âœ… Database initialized")
    yield
    print("ðŸ‘‹ Shutting down...")

app = FastAPI(
    title="IntelliScaleSim API",
    description="Auto-scaling simulation platform for education",
    version="1.0.0",
    lifespan=lifespan
)

app.add_middleware(
    CORSMiddleware,
    allow_origins=["http://localhost:5173", "http://localhost:3000"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Include routers
app.include_router(auth.router, prefix="/api/auth", tags=["authentication"])
app.include_router(simulations.router)

# Import and include metrics router
from routers.metrics import router as metrics_router
app.include_router(metrics_router)
print("âœ… Docker metrics API enabled at /api/metrics")

# Import and include autoscaling router
from routers.autoscaling import router as autoscaling_router
app.include_router(autoscaling_router)
print("âœ… Auto-scaling API enabled at /api/autoscaling")

# Import and include deployment router
from routers.deployment import router as deployment_router
app.include_router(deployment_router)
print("âœ… Deployment API enabled at /api/deployment")

@app.get("/")
async def root():
    return {
        "service": "IntelliScaleSim",
        "version": "1.0.0",
        "status": "running",
        "endpoints": {
            "health": "/api/health",
            "auth": "/api/auth",
            "simulations": "/api/simulations",
            "metrics": "/api/metrics",
            "autoscaling": "/api/autoscaling",
            "deployment": "/api/deployment",
            "docs": "/docs"
        }
    }

@app.get("/health")
@app.get("/api/health")
async def health_check():
    return {"status": "ok", "service": "IntelliScaleSim API"}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
