import { useState } from 'react';
import { LayoutDashboard, Container, GitBranch, Gauge, Users, Settings, Activity, Eye, TrendingUp, BookOpen, Rocket, FileText } from 'lucide-react';
import Login from './components/auth/Login';
import Layout from './layouts/Layout';
import AdminPage from './pages/AdminPage';
import DevOpsPage from './pages/DevOpsPage';
import MonitorPage from './pages/MonitorPage';
import DeploymentPage from './pages/DeploymentPage';
import DocumentationPage from './pages/DocumentationPage';
import ContainersPage from './pages/ContainersPage';
import Analytics from './pages/AnalyticsV2';
import AutoScaling from './pages/AutoScaling';

function App() {
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [userRole, setUserRole] = useState(null);
  const [activePage, setActivePage] = useState('dashboard');

  const handleLogin = (role) => {
    setUserRole(role);
    setIsAuthenticated(true);
    setActivePage('dashboard');
  };

  const handleLogout = () => {
    setIsAuthenticated(false);
    setUserRole(null);
    setActivePage('dashboard');
  };

  const getNavigation = () => {
    if (userRole === 'admin') {
      return [
        { id: 'dashboard', label: 'Dashboard', icon: LayoutDashboard },
        { id: 'users', label: 'Manage Users', icon: Users },
        { id: 'stats', label: 'System Stats', icon: Activity },
        { id: 'settings', label: 'Configure Settings', icon: Settings }
      ];
    } else if (userRole === 'teacher') {
      return [
        { id: 'dashboard', label: 'Dashboard', icon: LayoutDashboard },
        { id: 'simulations', label: 'Manage Simulations', icon: Container },
        { id: 'deploy', label: 'Create Assignment', icon: GitBranch },
        { id: 'analytics', label: 'Student Analytics', icon: TrendingUp }
      ];
    } else {
      return [
        { id: 'dashboard', label: 'Dashboard', icon: LayoutDashboard },
        { id: 'deploy', label: 'Deploy Application', icon: Rocket },
        { id: 'containers', label: 'My Containers', icon: Container },
        { id: 'docs', label: 'Documentation', icon: FileText },
        { id: 'analytics', label: 'Analytics', icon: TrendingUp }
      ];
    }
  };

  const getRoleLabel = () => {
    if (userRole === 'admin') return 'Admin Panel';
    if (userRole === 'teacher') return 'Teacher Dashboard';
    return 'Student Dashboard';
  };

  const renderPage = () => {
    if (userRole === 'admin') {
      return <AdminPage />;
    } else if (userRole === 'teacher') {
      return <DevOpsPage />;
    } else {
      // Student pages
      if (activePage === 'deploy') {
        return <DeploymentPage onNavigate={setActivePage} />;
      } else if (activePage === 'docs') {
        return <DocumentationPage />;
      } else if (activePage === 'containers') {
        return <ContainersPage />;
      } else if (activePage === 'analytics') {
        return <Analytics />;
      }
      return <MonitorPage onNavigate={setActivePage} />;
    }
  };

  if (!isAuthenticated) {
    return <Login onLogin={handleLogin} />;
  }

  return (
    <Layout
      role={getRoleLabel()}
      onLogout={handleLogout}
      navigation={getNavigation()}
      activePage={activePage}
      setActivePage={setActivePage}
    >
      {renderPage()}
    </Layout>
  );
}

export default App;
