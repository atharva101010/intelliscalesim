import React, { useState } from 'react';
import { Link, useLocation, useNavigate, Outlet } from 'react-router-dom';
import { 
  LayoutDashboard, 
  Package, 
  Box, 
  Gauge, 
  Zap, 
  DollarSign, 
  BookOpen, 
  BarChart3,
  LogOut,
  Menu,
  X
} from 'lucide-react';

const StudentLayout = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const [isSidebarOpen, setIsSidebarOpen] = useState(true);

  const handleLogout = () => {
    localStorage.removeItem('token');
    navigate('/');
  };

  const menuItems = [
    { name: 'Dashboard', icon: LayoutDashboard, path: '/student' },
    { name: 'Deploy', icon: Package, path: '/student/deploy' },
    { name: 'Containers', icon: Box, path: '/student/containers' },
    { name: 'Auto-Scaling', icon: Gauge, path: '/student/auto-scaling' },
    { name: 'Load Testing', icon: Zap, path: '/student/load-testing' },
    { name: 'Billing', icon: DollarSign, path: '/student/billing' },
    { name: 'Documentation', icon: BookOpen, path: '/student/documentation' },
    { name: 'Analytics', icon: BarChart3, path: '/student/analytics' },
  ];

  return (
    <div className="flex h-screen bg-gray-50">
      {/* Sidebar */}
      <aside className={\`\${isSidebarOpen ? 'w-64' : 'w-20'} bg-gradient-to-b from-blue-600 to-blue-700 text-white transition-all duration-300 flex flex-col\`}>
        {/* Header */}
        <div className="p-4 flex items-center justify-between">
          {isSidebarOpen && (
            <div>
              <h1 className="text-xl font-bold">IntelliScaleSim</h1>
              <p className="text-xs text-blue-200">Student Portal</p>
            </div>
          )}
          <button
            onClick={() => setIsSidebarOpen(!isSidebarOpen)}
            className="p-2 hover:bg-blue-500 rounded-lg transition"
          >
            {isSidebarOpen ? <X size={20} /> : <Menu size={20} />}
          </button>
        </div>

        {/* Navigation */}
        <nav className="flex-1 px-2 py-4 space-y-1 overflow-y-auto">
          {menuItems.map((item) => {
            const Icon = item.icon;
            const isActive = location.pathname === item.path;
            return (
              <Link
                key={item.path}
                to={item.path}
                className={\`flex items-center gap-3 px-3 py-3 rounded-lg transition-all \${
                  isActive
                    ? 'bg-blue-500 shadow-lg'
                    : 'hover:bg-blue-500/50'
                } \${!isSidebarOpen && 'justify-center'}\`}
                title={!isSidebarOpen ? item.name : ''}
              >
                <Icon size={20} />
                {isSidebarOpen && <span>{item.name}</span>}
              </Link>
            );
          })}
        </nav>

        {/* Logout Button */}
        <div className="p-4 border-t border-blue-500">
          <button
            onClick={handleLogout}
            className={\`flex items-center gap-3 w-full px-3 py-3 rounded-lg hover:bg-red-500 transition-all \${
              !isSidebarOpen && 'justify-center'
            }\`}
            title={!isSidebarOpen ? 'Logout' : ''}
          >
            <LogOut size={20} />
            {isSidebarOpen && <span>Logout</span>}
          </button>
        </div>
      </aside>

      {/* Main Content */}
      <main className="flex-1 overflow-auto">
        <Outlet />
      </main>
    </div>
  );
};

export default StudentLayout;
